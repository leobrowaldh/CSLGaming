// <auto-generated />
using System;
using CSLGaming.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSLGaming.Data.Migrations
{
    [DbContext(typeof(CSLGamingContext))]
    [Migration("20240111130612_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CSLGaming.Data.Entities.AgeRestriction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AgeRestrictions");
                });

            modelBuilder.Entity("CSLGaming.Data.Entities.Filter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Filters");
                });

            modelBuilder.Entity("CSLGaming.Data.Entities.Genere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GenereType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Generes");
                });

            modelBuilder.Entity("CSLGaming.Data.Entities.GenereProduct", b =>
                {
                    b.Property<int>("GenereId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("GenereId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("GenereProducts");
                });

            modelBuilder.Entity("CSLGaming.Data.Entities.OS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OSType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OSs");
                });

            modelBuilder.Entity("CSLGaming.Data.Entities.OSProduct", b =>
                {
                    b.Property<int>("OSId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OSId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OsProducts");
                });

            modelBuilder.Entity("CSLGaming.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgeRestrictionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgeRestrictionId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CSLGaming.Data.Entities.GenereProduct", b =>
                {
                    b.HasOne("CSLGaming.Data.Entities.Genere", null)
                        .WithMany()
                        .HasForeignKey("GenereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSLGaming.Data.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CSLGaming.Data.Entities.OSProduct", b =>
                {
                    b.HasOne("CSLGaming.Data.Entities.OS", null)
                        .WithMany()
                        .HasForeignKey("OSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSLGaming.Data.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CSLGaming.Data.Entities.Product", b =>
                {
                    b.HasOne("CSLGaming.Data.Entities.AgeRestriction", "AgeRestriction")
                        .WithMany("Products")
                        .HasForeignKey("AgeRestrictionId");

                    b.Navigation("AgeRestriction");
                });

            modelBuilder.Entity("CSLGaming.Data.Entities.AgeRestriction", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
